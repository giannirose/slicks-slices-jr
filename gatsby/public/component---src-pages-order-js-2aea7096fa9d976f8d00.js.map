{"version":3,"sources":["webpack:///./src/pages/order.js"],"names":["OrderPage","pizzas","data","nodes","useForm","name","email","mapleSyrup","values","updateValue","usePizza","order","addToOrder","removeFromOrder","error","loading","message","submitOrder","title","onSubmit","disabled","htmlFor","type","id","value","onChange","className","map","pizza","key","width","height","fluid","image","asset","alt","size","onClick","formatMoney","calculatePizzaPrice","price","calculateOrderTotal","query"],"mappings":"2FAAA,+OAae,SAASA,EAAT,GAA8B,IACrCC,EADoC,EAARC,KACdD,OAAOE,MADe,EAIVC,YAAQ,CACtCC,KAAM,GACNC,MAAO,GACPC,WAAY,KAHNC,EAJkC,EAIlCA,OAAQC,EAJ0B,EAI1BA,YAJ0B,EAkBtCC,YAAS,CACXT,SACAO,WATAG,EAXwC,EAWxCA,MACAC,EAZwC,EAYxCA,WACAC,EAbwC,EAaxCA,gBACAC,EAdwC,EAcxCA,MACAC,EAfwC,EAexCA,QACAC,EAhBwC,EAgBxCA,QACAC,EAjBwC,EAiBxCA,YAMF,OAAID,EACK,2BAAIA,GAIX,oCACE,kBAAC,IAAD,CAAKE,MAAM,mBACX,kBAAC,IAAD,CAAaC,SAAUF,GAErB,8BAAUG,SAAUL,GAClB,6CACA,2BAAOM,QAAQ,QAAf,OAEE,2BACEC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHC,MAAOhB,EAAOH,KACdoB,SAAUhB,KAGd,2BAAOY,QAAQ,SAAf,QAEE,2BACEC,KAAK,QACLjB,KAAK,QACLkB,GAAG,QACHC,MAAOhB,EAAOF,MACdmB,SAAUhB,KAId,2BACEa,KAAK,aACLjB,KAAK,aACLkB,GAAG,aACHC,MAAOhB,EAAOD,WACdkB,SAAUhB,EACViB,UAAU,gBAGd,8BAAUN,SAAUL,EAASW,UAAU,QACrC,wCACCzB,EAAO0B,KAAI,SAACC,GAAD,OACV,kBAAC,IAAD,CAAgBC,IAAKD,EAAML,IACzB,kBAAC,IAAD,CACEO,MAAM,KACNC,OAAO,KACPC,MAAOJ,EAAMK,MAAMC,MAAMF,MACzBG,IAAKP,EAAMvB,OAEb,6BACE,4BAAKuB,EAAMvB,OAEb,6BACG,CAAC,IAAK,IAAK,KAAKsB,KAAI,SAACS,GAAD,OACnB,4BACEd,KAAK,SACLO,IAAKO,EACLC,QAAS,kBACPzB,EAAW,CACTW,GAAIK,EAAML,GACVa,WAIHA,EAVH,IAUUE,YAAYC,YAAoBX,EAAMY,MAAOJ,cAOjE,8BAAUhB,SAAUL,EAASW,UAAU,SACrC,+CACA,kBAAC,IAAD,CACEf,MAAOA,EACPV,OAAQA,EACRY,gBAAiBA,KAIrB,8BAAUO,SAAUL,GAClB,6CACiBuB,YAAYG,YAAoB9B,EAAOV,KAExD,6BAAMa,EAAQ,qCAAWA,GAAa,IACtC,4BAAQQ,KAAK,SAASF,SAAUL,GAC7BA,EAAU,mBAAqB,kBAQrC,IAAM2B,EAAK","file":"component---src-pages-order-js-2aea7096fa9d976f8d00.js","sourcesContent":["import React, { useState } from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport SEO from '../components/SEO';\nimport useForm from '../utils/useForm';\nimport calculatePizzaPrice from '../utils/calculatePizzaPrice';\nimport formatMoney from '../utils/formatMoney';\nimport OrderStyles from '../styles/OrderStyles';\nimport MenuItemStyles from '../styles/MenuItemStyles';\nimport usePizza from '../utils/usePizza';\nimport PizzaOrder from '../components/PizzaOrder';\nimport calculateOrderTotal from '../utils/calculateOrderTotal';\n\nexport default function OrderPage({ data }) {\n  const pizzas = data.pizzas.nodes;\n  // The following gets changed\n  // const [name, setName] = useState('');\n  const { values, updateValue } = useForm({\n    name: '',\n    email: '',\n    mapleSyrup: '',\n  });\n\n  const {\n    order,\n    addToOrder,\n    removeFromOrder,\n    error,\n    loading,\n    message,\n    submitOrder,\n  } = usePizza({\n    pizzas,\n    values,\n  });\n\n  if (message) {\n    return <p>{message}</p>;\n  }\n\n  return (\n    <>\n      <SEO title=\"Order a Pizza!\" />\n      <OrderStyles onSubmit={submitOrder}>\n        {/* <form> */}\n        <fieldset disabled={loading}>\n          <legend>Your Info</legend>\n          <label htmlFor=\"name\">\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"name\"\n              value={values.name}\n              onChange={updateValue}\n            />\n          </label>\n          <label htmlFor=\"email\">\n            email\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              value={values.email}\n              onChange={updateValue}\n            />\n          </label>\n\n          <input\n            type=\"mapleSyrup\"\n            name=\"mapleSyrup\"\n            id=\"mapleSyrup\"\n            value={values.mapleSyrup}\n            onChange={updateValue}\n            className=\"mapleSyrup\"\n          />\n        </fieldset>\n        <fieldset disabled={loading} className=\"menu\">\n          <legend>Menu</legend>\n          {pizzas.map((pizza) => (\n            <MenuItemStyles key={pizza.id}>\n              <Img\n                width=\"50\"\n                height=\"50\"\n                fluid={pizza.image.asset.fluid}\n                alt={pizza.name}\n              />\n              <div>\n                <h2>{pizza.name}</h2>\n              </div>\n              <div>\n                {['S', 'M', 'L'].map((size) => (\n                  <button\n                    type=\"button\"\n                    key={size}\n                    onClick={() =>\n                      addToOrder({\n                        id: pizza.id,\n                        size,\n                      })\n                    }\n                  >\n                    {size} {formatMoney(calculatePizzaPrice(pizza.price, size))}\n                  </button>\n                ))}\n              </div>\n            </MenuItemStyles>\n          ))}\n        </fieldset>\n        <fieldset disabled={loading} className=\"order\">\n          <legend>Order Ahead</legend>\n          <PizzaOrder\n            order={order}\n            pizzas={pizzas}\n            removeFromOrder={removeFromOrder}\n          />\n        </fieldset>\n        {/* </form> */}\n        <fieldset disabled={loading}>\n          <h3>\n            Your total is {formatMoney(calculateOrderTotal(order, pizzas))}\n          </h3>\n          <div>{error ? <p>Error: {error}</p> : ''}</div>\n          <button type=\"submit\" disabled={loading}>\n            {loading ? 'Placing Order...' : 'Order Ahead'}\n          </button>\n        </fieldset>\n      </OrderStyles>\n    </>\n  );\n}\n\nexport const query = graphql`\n  query {\n    pizzas: allSanityPizza {\n      nodes {\n        name\n        id\n        slug {\n          current\n        }\n        price\n        image {\n          asset {\n            # fixed(width: 600, height: 200) {\n            #   ...GatsbySanityImageFixed\n            # }\n            fluid(maxWidth: 100) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}