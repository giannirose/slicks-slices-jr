{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/utils/attachNameAndPrices.js","webpack:///./src/utils/usePizza.js","webpack:///./src/utils/calculateOrderTotal.js","webpack:///./src/styles/OrderStyles.js","webpack:///./src/utils/formatMoney.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./src/styles/MenuItemStyles.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js","webpack:///./src/utils/useForm.js","webpack:///./src/components/PizzaOrder.js","webpack:///./src/utils/calculatePizzaPrice.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","attachNamesAndPrices","order","pizzas","map","item","pizza","find","id","name","thumbnail","image","asset","fluid","src","price","formatMoney","calculatePizzaPrice","size","usePizza","values","useContext","OrderContext","setOrder","useState","setError","loading","setLoading","message","setMessage","e","a","preventDefault","body","total","calculateOrderTotal","email","mapleSyrup","console","log","fetch","process","method","headers","JSON","stringify","res","text","parse","status","addToOrder","orderedPizza","removeFromOrder","index","slice","submitOrder","reduce","runningTotal","singleOrder","singlePizza","OrderStyles","styled","form","formatter","Intl","NumberFormat","style","currency","cents","format","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function","MenuItemStyles","div","useForm","defaults","setValues","updateValue","target","parseInt","PizzaOrder","className","title","onClick","sizes","S","M","L"],"mappings":"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","file":"90b6e119e18df363e8f48a6e469e8623d21aa31c-7b9fc3b118d6fda6dba5.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import formatMoney from './formatMoney';\nimport calculatePizzaPrice from './calculatePizzaPrice';\n\nexport default function attachNamesAndPrices(order, pizzas) {\n  return order.map((item) => {\n    const pizza = pizzas.find((pizza) => pizza.id === item.id);\n    return {\n      ...item,\n      name: pizza.name,\n      thumbnail: pizza.image.asset.fluid.src,\n      price: formatMoney(calculatePizzaPrice(pizza.price, item.size)),\n    };\n  });\n}\n","import { useState, useContext } from 'react';\nimport OrderContext from '../components/OrderContext';\nimport formatMoney from './formatMoney';\nimport calculateOrderTotal from './calculateOrderTotal';\nimport attachNamesAndPrices from './attachNameAndPrices';\n\nexport default function usePizza({ pizzas, values }) {\n  // 1.  Create some state to hold our order\n  // We got rid of this line because we moved useState up to the provider\n  // const [order, setOrder] = useState([]);\n  // Now we access both our state and our updater function (setOrder) via context\n  const [order, setOrder] = useContext(OrderContext);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  // 2.Make a function to add things to our order\n  function addToOrder(orderedPizza) {\n    setOrder([...order, orderedPizza]);\n  }\n  // 3. Make a function to remove things from our order\n  function removeFromOrder(index) {\n    setOrder([\n      // everything before the item we want to remove\n      ...order.slice(0, index),\n      // everything after the item we want to remove\n      ...order.slice(index + 1),\n    ]);\n  }\n  // Make a submitOrder function that runs when someone submits the form\n  async function submitOrder(e) {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    // setMessage(null);\n    // setMessage('Go Eat!');\n\n    // gather all the data\n    const body = {\n      order: attachNamesAndPrices(order, pizzas),\n      total: formatMoney(calculateOrderTotal(order, pizzas)),\n      name: values.name,\n      email: values.email,\n      mapleSyrup: values.mapleSyrup,\n    };\n    console.log(body);\n\n    // 4. Send this data to a serverless function when they check out\n\n    // We start out with  the line below but that hard-codes and we don't ultimately want to do that\n    // const res = fetch(`./netlify/functions/placeOrder`);\n    const res = await fetch(\n      `${process.env.GATSBY_SERVERLESS_BASE}/placeOrder`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(body),\n      }\n    );\n    // Comment out the following line and use console.log(some string) to test\n    const text = JSON.parse(await res.text());\n    // console.log(text);\n\n    // check if everything worked\n    if (res.status >= 400 && res.status < 600) {\n      setLoading(false); // turn off loading\n      setError(text.message);\n    } else {\n      // it worked!\n      setLoading(false);\n      setMessage('Success! Come on down for your pizza');\n    }\n  }\n\n  return {\n    order,\n    addToOrder,\n    removeFromOrder,\n    error,\n    loading,\n    message,\n    submitOrder,\n  };\n}\n","import calculatePizzaPrice from './calculatePizzaPrice';\n\nexport default function calculateOrderTotal(order, pizzas) {\n  // Loop over each item in the order\n  return order.reduce((runningTotal, singleOrder) => {\n    const pizza = pizzas.find(\n      (singlePizza) => singlePizza.id === singleOrder.id\n    );\n    return runningTotal + calculatePizzaPrice(pizza.price, singleOrder.size);\n  }, 0);\n  // Calculate the total for that pizza\n\n  // Add that total to the running total\n}\n","import styled from 'styled-components';\n\nconst OrderStyles = styled.form`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n  fieldset {\n    grid-column: span 2;\n    max-height: 600px;\n    overflow: auto;\n    display: grid;\n    gap: 1rem;\n    align-content: start;\n    &.order,\n    &.menu {\n      grid-column: span 1;\n      /* Chrome is weird about Grid and fieldsets, so we add a fixed height to fix it :)  */\n      height: 600px;\n    }\n  }\n  .mapleSyrup {\n    display: none;\n  }\n  @media (max-width: 900px) {\n    fieldset.menu,\n    fieldset.order {\n      grid-column: span 2;\n    }\n  }\n  /*\n  button {\n    margin-left: 0.5rem;\n  }\n  */\n`;\n\nexport default OrderStyles;\n","const formatter = Intl.NumberFormat('en-CA', {\n  style: 'currency',\n  currency: 'CAD',\n});\n\nexport default function formatMoney(cents) {\n  return formatter.format(cents / 100);\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import styled from 'styled-components';\n\nconst MenuItemStyles = styled.div`\n  display: grid;\n  grid-template-columns: 100px 1fr;\n  grid-template-rows: 1fr 1fr;\n  gap: 0 1.3rem;\n  align-content: center;\n  align-items: center;\n  position: relative;\n  .gatsby-image-wrapper {\n    grid-row: span 2;\n    height: 100%;\n  }\n  p {\n    margin: 0;\n  }\n  button {\n    font-size: 1.5rem;\n  }\n\n  button + button {\n    margin-left: 1rem;\n  }\n  .remove {\n    background: none;\n    color: var(--red);\n    font-size: 3rem;\n    position: absolute;\n    top: 0;\n    right: 0;\n    box-shadow: none;\n    line-height: 1rem;\n  }\n`;\n\nexport default MenuItemStyles;\n","module.exports = require(\"regenerator-runtime\");\n","import { useState } from 'react';\n\nexport default function useForm(defaults) {\n  const [values, setValues] = useState(defaults);\n\n  function updateValue(e) {\n    // check if it is a number and convert\n    let { value } = e.target;\n    if (e.target.type === 'number') {\n      // or just   parseInt(value) will work\n      value = parseInt(e.target.value);\n    }\n    setValues({\n      // copy the existing values into it\n      ...values,\n      // update the new value that changed\n      [e.target.name]: value,\n    });\n  }\n\n  return { values, updateValue };\n}\n","import React from 'react';\nimport Img from 'gatsby-image';\nimport MenuItemStyles from '../styles/MenuItemStyles';\nimport calculatePizzaPrice from '../utils/calculatePizzaPrice';\nimport formatMoney from '../utils/formatMoney';\n\nexport default function PizzaOrder({ order, pizzas, removeFromOrder }) {\n  return (\n    <>\n      {order.map((singleOrder, index) => {\n        const pizza = pizzas.find((pizza) => pizza.id === singleOrder.id);\n        return (\n          <MenuItemStyles key={`${singleOrder.id}-${index}`}>\n            <Img fluid={pizza.image.asset.fluid} />\n            <h2>{pizza.name}</h2>\n            <p>\n              {formatMoney(calculatePizzaPrice(pizza.price, singleOrder.size))}\n              <button\n                type=\"button\"\n                className=\"remove\"\n                title={`Remove ${singleOrder.size} ${pizza.name} from Order`}\n                onClick={() => removeFromOrder(index)}\n              >\n                &times;\n              </button>\n            </p>\n          </MenuItemStyles>\n        );\n      })}\n    </>\n  );\n}\n","const sizes = {\n  S: 0.75,\n  M: 1,\n  L: 1.25,\n};\n\nexport default function calculatePizzaPrice(cents, size) {\n  return cents * sizes[size];\n}\n"],"sourceRoot":""}